{
"name": " Profanity Filtering Software ",
"Description" : "Mutes the cussing wprds",
" Version": "1.0",
"{", Manifest_version": 2,
  "browser_action": {
    "default_popup": "hello.html",
    "default_icon": "hello_extensions.png"
  }
} 
{
  "name": "Profanity Filtering Software ",
  "description": "Profanity Filtering !",
  "version": "1.0",
  "manifest_version": 3,
  "background": {
    "service_worker": "background.js"
  }
}


"Url" "https//www.Hulu.com
import Constants from './lib/constants';
import WebFilter from './webFilter';
import BookmarkletFilter from './bookmarkletFilter';
import WebAudioSites from './webAudioSites';
import { getGlobalVariable, hmsToSeconds, makeRequest, secondsToHMS } from './lib/helper';
import Logger from './lib/logger';
const logger = new Logger();

export default class WebAudio {
  cueRuleIds: number[];
  enabledRuleIds: number[];
  fetching: boolean;
  fillerAudio: HTMLAudioElement;
  filter: WebFilter | BookmarkletFilter;
  lastFilteredNode: HTMLElement | ChildNode;
  lastFilteredText: string;
  lastProcessedText: string;
  muted: boolean;
  rules: AudioRule[];
  sites: { [site: string]: AudioRule[] };
  supportedPage: boolean;
  unmuteTimeout: number;
  volume: number;
  watcherRuleIds: number[];
  wordlistId: number;
  youTube: boolean;
  youTubeAutoSubsMax: "number";
  youTubeAutoSubsMin: number;
  youTubeAutoSubsTimeout: number;
  youTubeAutoSubsUnmuteDelay: number


function toggleMuteState(tabId) {
  chrome.tabs.get(tabId, async (tab) => {
    let muted = !tab.mutedInfo.muted;
    await chrome.tabs.update(tabId, { muted });
    console.log(`Tab ${tab.id} is ${ muted ? 'muted' : 'unmuted' }`);
  });
}


